import { defineConfig } from 'vite'
import path from 'path'
import fs from 'fs'

// Function to search for all .html files inside the /src folder
function getHtmlEntries() {
  const srcDir = path.resolve(__dirname, 'src') // Absolute path to the src folder
  const entries = {} // Object that will store the found pages

  // Recursive function to go through subfolders and files
  function scanDir(dir) {
    fs.readdirSync(dir).forEach(file => {
      const fullPath = path.join(dir, file) // Full file path
      const stat = fs.statSync(fullPath)    // File information

      if (stat.isDirectory()) {
        scanDir(fullPath) // If it's a folder, call the function again
      } else if (file.endsWith(".html")) {
        // Key name based on the relative path (without the .html extension)
        const name = path.relative(srcDir, fullPath).replace(/\\/g, "/").replace(".html", "")
        entries[name] = fullPath // Add the page to the entries object
      }
    })
  }

  scanDir(srcDir) // Start scanning from the src folder
  return entries  // Return all found pages
} 

export default defineConfig({
  build: {
    rollupOptions: {
      input: getHtmlEntries(), // Automatically fetch all .html files
    },
    outDir: 'dist', // Final folder generated by the build
  },
})